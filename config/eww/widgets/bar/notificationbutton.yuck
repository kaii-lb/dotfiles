; (deflisten notifications :initial "" `python3 /home/kaii/.config/eww/scripts/notification_daemon.py`)
(deflisten notifications `scripts/notifications.sh current`)

(defwidget notification [notify]
    (box :orientation "v" :space-evenly false :hexpand true
        (box :orientation "h" :space-evenly false :hexpand true :class "notification-info"
            (image :valign "center" :class {notify.image != "null" ? "notification-image-visible" : "notification-image-hidden"} :visible {notify.image != "null" ? true :false} :path {notify.image} :image-width 64 :image-height 64)
            
            (box :orientation "v" :space-evenly false :hexpand true :vexpand true :valign "center"
                ; (label :halign "start" :class "notification-app" :visible {notify.app != "null" ? true :false} :text {notify.app})
                (label :halign "start" :valign "center" :justify "left" :class "notification-summary" :visible {notify.summary != "null" ? true :false} :wrap true :unindent true :wrap-mode "word" :xalign "0" :markup {notify.summary})
                (label :halign "start" :valign "center" :justify "left" :class "notification-body" :visible {notify.body != "null" ? true :false} :wrap true :unindent true :wrap-mode "word" :xalign "0" :markup {notify.body})
            )

            (eventbox :cursor "pointer" :halign "end" :valign "center"
                (button :valign "center" :class "notification-close" :onclick "scripts/notifications.sh close ${notify.id}" "󰅖")
            )
        )
        
        (box :orientation "h" :space-evenly false :class "notification-action-box"
            (for action in {notify.actions}
                (button :class "notification-action" :onclick "scripts/notifications.sh action ${notify.id} ${action[0]}" {action[1]})
            )
        )
    )
)

(defwidget notifications_popup_widget []
    (box :orientation "v" :space-evenly false
        (for i in "[2, 1, 0]"
            (revealer :transition "slidedown" :reveal {notifications.popups[i] == "null" ? false : true} :duration "350ms"
                (box :orientation "h" :space-evenly false :class "notifications-popup-body"
                    (notification :notify {notifications.popups[i]})
                )
            )
        )
    )
)

(defwidget notificationbutton []
    (box
        (eventbox :cursor "pointer"
            (button :class "notificationbutton-widget"
                (label :text "")
            )
        )
    )
)

(defwindow notification-view
    :monitor 0
    :geometry (geometry :x "0%"
                               :y "0%"
                               :width "10%"
                               :height "50px"
                               :anchor "top center")
           :stacking "overlay"
           :exclusive false
           :focusable false
           :namespace "eww-notis"

    (box
        (notifications_popup_widget)
    )
)